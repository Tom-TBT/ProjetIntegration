LesEpreuves(idEpreuve, idDiscipline, nom, nbPersonnes)

LesDisciplines(idDiscipline, nom)

EpreuveSportif(idEpreuve, idCompetition, idSportif) 								// Classe associative

EpreuveCompetition(idEpreuve, idCompetition, date, lieu, genre) 	// Classe associative

LesCompetitions(idCompetition, pays, dateDebut, dateFin)

LesTickets(idTicket, prix, estPhysique, idEpreuve, idCompetition, idSpectateur)

LesSpectateurs(idSpectateur, nom, prenom, adresse, telephone)

LesSportifs(idSportif, idDelegation, nom, prenom, dateNaissance, estFemme, pays, idChambre)

LesDelegations(idDelegation)

LesChambres(idChambre, idBatiment, nbPlaces)

LesBatiments(idBatiment, nom, adresse)



Contraintes d'integritées gérées par la BDD:

LesEpreuves[idDiscipline] ⊆ LesDisciplines[idDiscipline]
LesSportifs[idDelegation] ⊆ LesDelegations[idDelegation]
lesSportifs[idChambre] ⊆ LesChambres[idChambre]
LesChambres[idBatiment] ⊆ LesBatiments[idBatiment]
EpreuveSportif[idSportif] = LesSportifs[idSportif]
EpreuveSportif[idEpreuve] ⊆ EpreuveCompetition[idEpreuve]
EpreuveCompetition[idCompetition] = LesCompetitions[idCompetition]
EpreuveCompetition[idEpreuve] ⊆ LesEpreuves[idEpreuve]
LesEpreuves[idDiscipline] ⊆ LesDiscipline[idDiscipline]
LesTickets[idEpreuve] ⊆ EpreuveCompetition[idEpreuve]
LesTickets[idCompetition] ⊆ EpreuveCompetition[idCompetition]
LesTickets[idSpectateur] ⊆ LesSpectateurs[idSpectateur]

LesChambres[nbPlaces] ⊆ {1-10}
LesCompetitions[dateFin] > LesCompetitions[dateDebut]
EpreuveCompetition[date] >= LesCompetitions[dateDebut]
EpreuveCompetition[date] < LesCompetitions[dateFin]
LesEpreuves[nbPersonnes] > 0
LesTickets[prix] >= 0


Contraintes d'intégritées gérées par le logiciel:

LesEpreuves[genre] ⊆ {F,H,M}




Ce qu'il manque sur le diagramme :
LesSpectateurs(idSpectateur)
LesSportifs(idChambre)
LesTickets(idEpreuve,idCompetition, idSpectateur)
EpreuveSportif(idCompetition)



